---

- hosts: all
  vars:
    dnsmasq_stub_domains:
      "example.com": [ "192.168.33.224" ]
  roles:
    - base
    # Samba DC를 DNS resolver로 직접 지정시 DC가 죽은 경우
    # 패키지 설치, 외부 IDP 로그인시 외부 DNS 조회 실패를 방지하기 위해
    # dnsmasq를 Split-horizon DNS 용으로 사용
    - dnsmasq


- hosts: idsvc
  vars:
    nginx_proxy_selfsign_certs:
      example: example.com
    keycloak_version: 3.4.3.Final
    keycloak_port: 8080
    keycloak_db_hostname: 172.17.0.1
    keycloak_db_username: svc_keycloak
    keycloak_db_password: keycloak
    keycloak_db_database: keycloak
    pwm_port: 8081
    pwm_db_hostname: 172.17.0.1
    pwm_db_username: svc_pwm
    pwm_db_password: pwm
    pwm_db_database: pwm
    docker_daemon_config:
      # https://github.com/moby/moby/issues/23910
      dns: [ "172.17.0.1" ]
    postgresql_config:
      listen_addresses: '*'
    postgresql_hba_entries:
      - { type: local, database: all, user: dba, auth_method: peer, auth_options: "map=dba" }
      - { type: host, database: "{{ keycloak_db_database }}", user: "{{ keycloak_db_username }}", address: "172.17.0.0/16", auth_method: md5 }
      - { type: host, database: "{{ pwm_db_database }}", user: "{{ pwm_db_username }}", address: "172.17.0.0/16", auth_method: md5 }
    postgresql_pg_ident_entries:
      - { mapname: dba, system_user: root, db_user: dba }
      - { mapname: dba, system_user: vagrant, db_user: dba }
      # ex) vagrant@idsvc $ psql -U dba postgres
    postgresql_users:
      - name: dba
        role_attr_flags: SUPERUSER
      - name: "{{ keycloak_db_username }}"
        password: "{{ keycloak_db_password }}"
      - name: "{{ pwm_db_username }}"
        password: "{{ pwm_db_password }}"
    postgresql_databases:
      - name: "{{ keycloak_db_database }}"
        owner: "{{ keycloak_db_username }}"
      - name: "{{ pwm_db_database }}"
        owner: "{{ pwm_db_username }}"
  roles:
    - nginx_proxy
    - docker_host
    - pgsql
    - keycloak
    - pwm

- hosts: idsvc
  tasks:
    - name: Download Google CA Certificate
      get_url:
        url: https://pki.google.com/GIAG2.crt
        dest: /srv/keycloak/truststore/GIAg2.crt
        checksum: sha256:9b759d41e3de30f9d2f902027d792b65d950a98bbb6d6d56be7f2528453bf8e9

    - name: Download Samba DC Self signed certificate
      shell: openssl s_client -connect dc1.example.com:636 -showcerts < /dev/null 2> /dev/null | openssl x509 > /srv/keycloak/truststore/samba.pem
      args:
        creates: /srv/keycloak/truststore/samba.pem

    # Import example realm
    # Add initial admin user
    - name: Provision keycloak examples
      script: keycloak/provision.sh
      args:
        creates: /srv/keycloak/data/.provision.done
      become: yes

    - name: Install pwm sample configuration
      copy:
        src: pwm/sample/PwmConfiguration.xml
        dest: /srv/pwm/data/PwmConfiguration.xml
        owner: 999
        group: 999
        mode: 0600
        force: false

- hosts: examples
  vars:
    nginx_proxy_selfsign_certs:
      example: example.com
  roles:
    - nginx_proxy
    - jenkins
  tasks:
    - name: Install packages
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - unzip
        - zip

    - name: Install nginx vhosts config
      template:
        src: examples/jenkins/nginx-jenkins.conf.j2
        dest: /etc/nginx/conf.d/jenkins.conf
        owner: root
        group: root
        mode: 0644
      notify: Reload nginx

    - name: Provision
      script: examples/jenkins/provision.sh
      args:
        creates: /var/lib/jenkins/config.xml

    - name: Ensure jenkins service is started
      service:
        name: jenkins
        state: started

    - name: Autostart jenkins service
      service:
        name: jenkins
        enabled: yes

